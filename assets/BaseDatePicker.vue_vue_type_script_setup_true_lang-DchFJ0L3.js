import{m as d,r as h,d as m,b as o,v as S,t as n,k as c,e as g,F as y,g as f,o as i}from"./index-BaT-ORWp.js";const v=(e,s)=>{let t=JSON.parse(localStorage.getItem(e));if(t&&t.length){const a=JSON.stringify([...t,s]);localStorage.setItem(e,a)}else localStorage.setItem(e,JSON.stringify([s]));t=JSON.parse(localStorage.getItem(e))},p=(e,s)=>{const t=JSON.parse(localStorage.getItem(e));if(t.length){const a=t.filter(r=>r.id!==s);localStorage.setItem(e,JSON.stringify(a))}},k=()=>{const e=localStorage.getItem("requests-list");return e?JSON.parse(e):[]},V=d("requestStore",{state:()=>({requests:k()}),getters:{currentRequest:e=>s=>e.requests.find(t=>t.id===s),matchedRequests:e=>s=>e.requests.filter(t=>{if(t.originCity===s.originCity&&t.targetCity===s.targetCity&&t.dispatchDate<=s.dispatchDate&&t.id!==s.id)return t}),sortedRequests:e=>s=>{const t=e.requests;return s==="by sending date"?t.sort((a,r)=>r.dispatchDate-a.dispatchDate):t.sort((a,r)=>r.creationDate-a.creationDate),t}},actions:{addRequest(e){this.requests.push(e),v("requests-list",e)},updateRequest(e){const s=this.requests.findIndex(t=>t.id===e.id);this.requests[s]=e,localStorage.setItem("requests-list",JSON.stringify(this.requests))},deleteRequest(e){this.requests=this.requests.filter(s=>s.id!==e),p("requests-list",e)}}}),I=d("cities",()=>({cities:h(["Kyiv","Kharkiv","Odesa","Dnipro","Lviv","Zaporizhia","Kryvyi Rih","Mykolaiv","Mariupol","Luhansk","Vinnytsia","Poltava","Chernihiv","Cherkasy","Kherson","Khmelnytskyi","Rivne","Ivano-Frankivsk","Ternopil","Zhytomyr","Sumy","Kropyvnytskyi","Kremenchuk","Bila Tserkva","Melitopol","Uzhhorod","Enerhodar","Sloviansk","Pavlohrad","Berdiansk","Kamianske","Mukachevo","Simferopol","Sevastopol","Yalta","Kerch","Feodosia","Berdyansk","Alchevsk","Kramatorsk","Nizhyn","Lysychansk","Drohobych"])})),b=["value"],q={key:0,value:""},C=["value"],K=m({__name:"BaseSelect",props:{label:{type:String,default:""},options:{type:Array,default:()=>[]},modelValue:{type:String,default:""},defaultOption:{type:String,default:"Select"},customLabelClass:{type:String,default:""}},emits:["update:modelValue"],setup(e,{emit:s}){const t=s,a=r=>{const l=r.target;t("update:modelValue",l.value)};return(r,l)=>(i(),o("div",null,[e.label?(i(),o("label",{key:0,class:S(["d-block mb-1",e.customLabelClass])},n(e.label),3)):c("",!0),g("select",{value:e.modelValue,class:"form-select",onChange:a},[e.modelValue?c("",!0):(i(),o("option",q,n(e.defaultOption),1)),(i(!0),o(y,null,f(e.options,u=>(i(),o("option",{key:String(u),value:u},n(u),9,C))),128))],40,b)]))}}),D={key:0,for:"startDate",class:"mb-1"},N=["value"],R=m({__name:"BaseDatePicker",props:{label:{type:String,default:""},modelValue:{type:Number,default:0}},emits:["update:modelValue"],setup(e,{emit:s}){const t=s,a=r=>{const l=r.target;t("update:modelValue",new Date(l.value).getTime())};return(r,l)=>(i(),o("div",null,[e.label?(i(),o("label",D,n(e.label),1)):c("",!0),g("input",{value:new Date(e.modelValue).toISOString().substring(0,10),class:"form-control",type:"date",timezone:"US",min:"2023-02-20",max:"2999-12-31",onChange:a},null,40,N)]))}});export{K as _,V as a,R as b,I as u};
